<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<title>Attribute Normalized Instances</title>
		<link rel="stylesheet" type="text/css" href="style.css" />
		<script type="text/javascript" src="jquery-1.2.6.js"></script>
		<script type="text/javascript" src="structuremap.js"></script>
	    <style type="text/css">
            .style1
            {
                font-weight: normal;
            }
        </style>
	</head>
	<body class="code">
					<p>This style is a more terse configuration format that was 
					added in version 1.0.&nbsp; My recommendaton is to always use attribute normalized 
                        Xml configuration by marking the &lt;StructureMap&gt; node with the 
                        MementoStyle=&quot;Attribute&quot; attribute by default anytime you are using Xml 
                        configuration.&nbsp; </p>
    <h2 class="style1">Instance Root Node</h2>
    <p>An Instance is defined in Xml starting from a root node.&nbsp; The actual name of 
        the root node varies depending upon the context that an Instance is being 
        configured.&nbsp; For example, the AddInstance, DefaultInstance, 
        PluginFamily/Instance, Interceptor, and Source nodes in Xml configuration are 
        all Instance roots.&nbsp; The rules for an Instance node are the same regardless 
        of the context.&nbsp; The root node optionally specifies the name of the 
        instance and the concrete type of the instance.</p>
    <p>For a class called ColorRule,</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof1252\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red43\green145\blue175;\red163\green21\blue21;\red0\green0\blue255;}??\fs20     [\cf3 Pluggable\cf0 (\cf4 "Color"\cf0 )]\par ??    \cf5 public\cf0  \cf5 class\cf0  \cf3 ColorRule\cf0  : \cf3 Rule\par ??\cf0     \{\par ??        \cf5 private\cf0  \cf5 string\cf0  _Color;\par ??        \cf5 public\cf0  \cf5 string\cf0  ID = \cf3 Guid\cf0 .NewGuid().ToString();\par ??\par ??        \cf5 public\cf0  ColorRule(\cf5 string\cf0  Color)\par ??        \{\par ??            _Color = Color;\par ??        \}\par ??\par ??\par ??        \cf5 public\cf0  \cf5 string\cf0  Color\par ??        \{\par ??            \cf5 get\cf0  \{ \cf5 return\cf0  _Color; \}\par ??        \}\par ??    \}}
-->
    <div class="code-sample" 
                        style="font-family: Courier New; font-size: 10pt; color: black; background: white;">
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; [<span style="color: #2b91af;">Pluggable</span>(<span 
                style="color: #a31515;">&quot;Color&quot;</span>)]</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">class</span>
            <span style="color: #2b91af;">ColorRule</span> : <span style="color: #2b91af;">
            Rule</span></p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; {</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">private</span>
            <span style="color: blue;">string</span> _Color;</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span>
            <span style="color: blue;">string</span> ID = <span style="color: #2b91af;">Guid</span>.NewGuid().ToString();</p>
        <p style="margin: 0px;">
            &nbsp;</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> 
            ColorRule(<span style="color: blue;">string</span> Color)</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _Color = Color;</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
        <p style="margin: 0px;">
            &nbsp;</p>
        <p style="margin: 0px;">
            &nbsp;</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span>
            <span style="color: blue;">string</span> Color</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <span style="color: blue;">get</span> { <span style="color: blue;">return</span> 
            _Color; }</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; }</p>
    </div>
<!--EndFragment-->
<p>an Instance node might look like:</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue255;\red255\green255\blue255;\red163\green21\blue21;\red255\green0\blue0;\red0\green0\blue0;}??\fs20 \cf1     &lt;\cf3 Instance\cf1  \cf4 Key\cf1 =\cf0 "\cf1 Red\cf0 "\cf1  \cf4 Type\cf1 =\cf0 "\cf1 Color\cf0 "\cf1  \cf4 Color\cf1 =\cf0 "\cf1 Red\cf0 "\cf1  /&gt;}
-->
    <div style="font-family: Courier New; font-size: 10pt; color: black; background: white;">
        <p style="margin: 0px;" class="code-sample">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
                style="color: #a31515;">Instance</span><span style="color: blue;"> </span>
            <span style="color: red;">Key</span><span style="color: blue;">=</span>&quot;<span 
                style="color: blue;">Red</span>&quot;<span style="color: blue;"> </span>
            <span style="color: red;">Type</span><span style="color: blue;">=</span>&quot;<span 
                style="color: blue;">Color</span>&quot;<span style="color: blue;"> </span>
            <span style="color: red;">Color</span><span style="color: blue;">=</span>&quot;<span 
                style="color: blue;">Red</span>&quot;<span style="color: blue;"> /&gt;</span></p>
    </div>
<!--EndFragment-->
<p>The &quot;name&quot; of an Instance is definied by the Key attribute.&nbsp; The concrete 
    type can be specified in one of two ways.&nbsp; You can either use the &quot;Type&quot; 
    attribute above to specify the aliased concrete type, or do it more explicitly 
    by setting the TPluggedType attribute to the assembly qualified name of the 
    concrete type.</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue255;\red255\green255\blue255;\red163\green21\blue21;\red255\green0\blue0;\red0\green0\blue0;}??\fs20 \cf1     &lt;\cf3 Instance\cf1  \cf4 Key\cf1 =\cf0 "\cf1 Red\cf0 "\cf1  \cf4 TPluggedType\cf1 =\cf0 "\cf1 StructureMap.Testing.Widget.Color, StructureMap.Testing.Widget\cf0 "\cf1  \cf4 Color\cf1 =\cf0 "\cf1 Red\cf0 "\cf1  /&gt;}
-->
    <div style="font-family: Courier New; font-size: 10pt; color: black; background: white;">
        <p style="margin: 0px;" class="code-sample">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
                style="color: #a31515;">Instance</span><span style="color: blue;"> </span>
        <span style="color: red;">Key</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">Red</span>&quot;<span style="color: blue;"> </span>
        <span style="color: red;">TPluggedType</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">StructureMap.Testing.Widget.Color, 
        StructureMap.Testing.Widget</span>&quot;<span style="color: blue;"> </span>
        <span style="color: red;">Color</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">Red</span>&quot;<span style="color: blue;"> /&gt;</span></p>
</div>
<!--EndFragment-->
<hr />
					<h2 class="style1">Primitive Properties (Strings and basic value types)</h2>
					<p>Primitive constructor or setter arguments are defined by adding an attribute 
                        @propertyName=&quot;propertyValue&quot; to the instance node.&nbsp; A class with 
                        a string argument to the constructor,</p>
<div class="code-sample>                   
                  <pre style="margin: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Pluggable("Color", "Only for testing")]<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">class</span> ColorWidget : IWidget</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> ColorWidget(<span style="color: blue;">string</span> Color)</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _Color = Color;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
    <pre style="margin: 0px;">&nbsp;</pre>
    <p style="margin: 0px;">would be configured like this in the Xml:</p>

</div>
<br>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;" class="code-sample">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">Widget</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">="Color"</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">="Red"</span><span style="color: fuchsia;"> </span><span style="color: #FF0000">Color</span><span style="color: blue;">="Red" /&gt;</span></pre>
</div>

                    <hr />
                    <h2 class="style1">Long Strings</h2>
					<p>There is an optional mode to define a property value 
					inside a CDATA tag for very long strings like sql statements 
					or Javascript templates.&nbsp; </p>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: #800000">Instance </span><span style="color: red;">Type</span><span style="color: blue;">=&quot;Sql"</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">=&quot;SomeQuery"&gt;</span></pre>
<pre style="margin: 0px;"><span style="color: blue;">	    &lt;bigProp&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;     <span style="color: blue;">&lt;![</span><span style="color: fuchsia;">CDATA[</span></pre>
<pre style="margin: 0px;"><span style="color: fuchsia;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;    &nbsp; &nbsp;&nbsp;&nbsp; select </span><span style="color: blue;">*</span><span style="color: fuchsia;"> from table</span></pre>
<pre style="margin: 0px;"><span style="color: fuchsia;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;    &nbsp; &nbsp;&nbsp;&nbsp; where</span></pre>
<pre style="margin: 0px;"><span style="color: fuchsia;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;    &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; somecolumn = </span><span style="color: blue;">'something'</span><span style="color: fuchsia;"> or</span></pre>
<pre style="margin: 0px;"><span style="color: fuchsia;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;    &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; some_other_column = </span><span style="color: blue;">'something else'</span></pre>
<pre style="margin: 0px;"><span style="color: fuchsia;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;    &nbsp; </span><span style="color: blue;">]]&gt;</span></pre>
<pre style="margin: 0px;"><span style="color: #0000FF">            </span><span style="color: blue;">&lt;/</span><span style="color: #800000">bigProp</span><span style="color: blue;">&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: maroon;">Property</span><span style="color: blue;">&gt;</span></pre>
</div>

					<hr />
                    <h2 class="style1">Enumeration Properties</h2>
					<p>Enumeration arguments are defined the same way as 
					primitive properties.&nbsp; Use the string names of the 
					enumeration for the values.</p>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">enum</span> BreedEnum</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Hereford,</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Angus,</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Longhorn</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">    [Pluggable(&quot;Cow&quot;)]</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">class</span> Cow</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> BreedEnum Breed;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">long</span> Weight;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">string</span> Name;</pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> Cow(<span style="color: blue;">long</span> Weight, BreedEnum Breed, <span style="color: blue;">string</span> Name)</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.Breed = Breed;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.Weight = Weight;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.Name = Name;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
</div>
<br>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: #800000">Instance</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">=&quot;Cow"</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">=&quot;Maggie" </span><span style="color: #FF0000">Breed</span><span style="color: blue;">=&quot;Angus" /&gt;</span></pre>
</div>
					<hr />
                    <h2 class="style1">Dependency Properties</h2>
					<p>Child properties of non-primitive types are defined as 
					embedded memento nodes.&nbsp; Child properties can be either 
					defined inline or use a reference to a named instance of the 
					property type.&nbsp; If a child property is omitted or 
					defined with no value, StructureMap will use the default 
					instance of the property type.&nbsp; Simply add a child node to the main instance 
                        node with the name of the constructor argument or setter property name.</p>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; [PluginFamily, Pluggable("Default", "")]</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">class</span> GrandChild</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> GrandChild(<span style="color: blue;">bool</span> RightHanded, <span style="color: blue;">int</span> BirthYear)</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; [Pluggable("Leftie", "")]</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">class</span> LeftieGrandChild : GrandChild</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> LeftieGrandChild(<span style="color: blue;">int</span> BirthYear) : <span style="color: blue;">base</span>(<span style="color: blue;">false</span>, BirthYear)</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; [PluginFamily, Pluggable("Default", "")]</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">class</span> Child</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> Child(<span style="color: blue;">string</span> Name, GrandChild MyGrandChild)</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
</div>
<br>
<h4>Inline Definition</h4>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">StructureMap.Testing.Widget.Child</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">="Default"</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">="Tom" </span><span style="color: red;">Name</span><span style="color: blue;">=&quot;Tom"&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">MyGrandChild</span><span style="color: fuchsia;"> </span><span style="color: red;">Name</span><span style="color: blue;">="MyGrandChild"</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">="Leftie" </span><span style="color: #FF0000">BirthYear</span><span style="color: blue;">="1984" /&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: maroon;">StructureMap.Testing.Widget.Child</span><span style="color: blue;">&gt;</span></pre>
</div>
<h4>Reference Definition</h4>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">StructureMap.Testing.Widget.Child</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">="Default"</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">="Marsha" </span><span style="color: red;">Name</span><span style="color: blue;">=&quot;Marsha"&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">MyGrandChild</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">="Tommy"/&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: maroon;">StructureMap.Testing.Widget.Child</span><span style="color: blue;">&gt;</span>&nbsp;&nbsp;&nbsp; </pre>
</div>
                    <hr />
                    <h2 class="style1">Non Primitive Array Property</h2>
<p>If a property or constructor argument is an array of a non-primitive type, create 
    a child node to the top level instance node with the name of the property.&nbsp; 
    Simply add new InstanceMemento nodes with the name &lt;Child&gt; under the property 
    nodes for each element of the array.&nbsp; These &lt;Child&gt; nodes are Attribute 
    Normalized InstanceMemento&#39;s and follow the same rules expressed in this 
    document.</p>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; [Pluggable(&quot;Compound&quot;)]</pre>
<pre style="margin: 0px;">    <span style="color: blue;">public</span> <span style="color: blue;">class</span> CompoundStrategy : IStrategy</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> CompoundStrategy(IStrategy[] innerStrategies)</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</pre>
</div>
<br>
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border-top: windowtext 1pt solid; padding-top: 0pt; border-left: windowtext 1pt solid; padding-left: 0pt; border-right: windowtext 1pt solid; padding-right: 0pt; border-bottom: windowtext 1pt solid; padding-bottom: 0pt;">
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">Instance</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">="ArrayTest"</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">="Compound"&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: maroon;">innerStrategies</span><span style="color: blue;">&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;!</span><span style="color: green;">-- Referenced Instance --</span><span style="color: blue;">&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: #800000">Child</span><span style="color: fuchsia;"> </span><span style="color: red;">Key</span><span style="color: blue;">="Red" /&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: #800000">Child</span><span style="color: blue;">&gt;&lt;!</span><span style="color: green;">-- Default Instance --</span><span style="color: blue;">&gt;&lt;/</span><span style="color: #800000">Child</span><span style="color: blue;">&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;</pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;!</span><span style="color: green;">-- Inline Definition --</span><span style="color: blue;">&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: #800000">Child</span><span style="color: fuchsia;"> </span><span style="color: red;">Type</span><span style="color: blue;">="Random" </span><span style="color: #FF0000">seed</span><span style="color: blue;">=&quot;0.034"/&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: maroon;">innerStrategies</span><span style="color: blue;">&gt;</span></pre>
<pre style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: maroon;">Instance</span><span style="color: blue;">&gt;</span></pre>
    <p style="margin: 0px;">&nbsp;</p>
    <hr />
</div>
<h2 class="style1">Primitive Arrays</h2>
					<p>Primitive arrays like string[] or int[] can be defined in Xml.&nbsp; For a class 
                        with arguments like:</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;}??\fs20         \cf3 public\cf0  ClassWithStringAndIntArray(\cf3 int\cf0 [] numbers, \cf3 string\cf0 [] strings)\par ??        \{\par ??            _numbers = numbers;\par ??            _strings = strings;\par ??        \}}
-->
                    <div style="font-family: Courier New; font-size: 10pt; color: black; background: white;">
                        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> 
                            ClassWithStringAndIntArray(<span style="color: blue;">int</span>[] numbers,
                            <span style="color: blue;">string</span>[] strings)</p>
                        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
                        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _numbers = numbers;</p>
                        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _strings = strings;</p>
                        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
                    </div>
<!--EndFragment-->
<p>The Xml configuration is:</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue255;\red255\green255\blue255;\red163\green21\blue21;\red255\green0\blue0;\red0\green0\blue0;}??\fs20 \cf1   &lt;\cf3 DefaultInstance\par ??\cf1     \cf4 PluginType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithStringAndIntArray, StructureMap.Testing\cf0 "\par ??\cf1     \cf4 TPluggedType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithStringAndIntArray, StructureMap.Testing\cf0 "\cf1 &gt;\par ??\par ??    &lt;\cf3 numbers\cf1  \cf4 Values\cf1 =\cf0 "\cf1 1,2,3\cf0 "\cf1 /&gt;\par ??    &lt;\cf3 strings\cf1  \cf4 Values\cf1 =\cf0 "\cf1 1,2,3\cf0 "\cf1 /&gt;\par ??  &lt;/\cf3 DefaultInstance\cf1 &gt;}
-->
                    <div style="font-family: Courier New; font-size: 10pt; color: black; background: white;" 
                        class="code-sample">
                        <p style="margin: 0px;">
                            <span style="color: blue;">&nbsp; &lt;</span><span style="color: #a31515;">DefaultInstance</span></p>
                        <p style="margin: 0px;">
                            <span style="color: blue;">&nbsp;&nbsp;&nbsp; </span><span style="color: red;">
                            PluginType</span><span style="color: blue;">=</span>&quot;<span style="color: blue;">StructureMap.Testing.Configuration.ClassWithStringAndIntArray, 
                            StructureMap.Testing</span>&quot;</p>
                        <p style="margin: 0px;">
                            <span style="color: blue;">&nbsp;&nbsp;&nbsp; </span><span style="color: red;">
                            TPluggedType</span><span style="color: blue;">=</span>&quot;<span 
                                style="color: blue;">StructureMap.Testing.Configuration.ClassWithStringAndIntArray, 
                            StructureMap.Testing</span>&quot;<span style="color: blue;">&gt;</span></p>
                        <p style="margin: 0px;">
                            &nbsp;</p>
                        <p style="margin: 0px;">
                            <span class="style1" style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
                                class="style1" style="color: #a31515;">numbers</span><span class="style1" 
                                style="color: blue;"> </span><span class="style1" style="color: red;">Values</span><span 
                                class="style1" style="color: blue;">=</span>&quot;<span class="style1" 
                                style="color: blue;">1,2,3</span>&quot;<span class="style1" style="color: blue;">/&gt;</span></p>
                        <p style="margin: 0px;">
                            <span class="style1" style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
                                class="style1" style="color: #a31515;">strings</span><span class="style1" 
                                style="color: blue;"> </span><span class="style1" style="color: red;">Values</span><span 
                                class="style1" style="color: blue;">=</span>&quot;<span class="style1" 
                                style="color: blue;">1,2,3</span>&quot;<span class="style1" style="color: blue;">/&gt;</span></p>
                        <p style="margin: 0px;">
                            <span style="color: blue;">&nbsp; &lt;/</span><span style="color: #a31515;">DefaultInstance</span><span 
                                style="color: blue;">&gt;</span></p>
    </div>
<!--EndFragment-->
<p>By default, the Values attribute is assumed to be a comma delimited list.&nbsp; 
    The delimiter of the list can be optionally overriden by using the Delimiter 
    attribute.</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue255;\red255\green255\blue255;\red163\green21\blue21;\red255\green0\blue0;\red0\green0\blue0;}??\fs20 \cf1   &lt;\cf3 DefaultInstance\par ??\cf1     \cf4 PluginType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithStringAndIntArray, StructureMap.Testing\cf0 "\par ??\cf1     \cf4 TPluggedType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithStringAndIntArray, StructureMap.Testing\cf0 "\cf1 &gt;\par ??\par ??    &lt;\cf3 numbers\cf1  \cf4 Values\cf1 =\cf0 "\cf1 1;2;3\cf0 "\cf1  \cf4 Delimiter\cf1 =\cf0 "\cf1 ;\cf0 "\cf1 /&gt;\par ??    &lt;\cf3 strings\cf1  \cf4 Values\cf1 =\cf0 "\cf1 1,2,3\cf0 "\cf1 /&gt;\par ??  &lt;/\cf3 DefaultInstance\cf1 &gt;}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white;" 
                        class="code-sample">
    <p style="margin: 0px;">
        <span style="color: blue;">&nbsp; &lt;</span><span style="color: #a31515;">DefaultInstance</span></p>
    <p style="margin: 0px;">
        <span style="color: blue;">&nbsp;&nbsp;&nbsp; </span><span style="color: red;">
        PluginType</span><span style="color: blue;">=</span>&quot;<span style="color: blue;">StructureMap.Testing.Configuration.ClassWithStringAndIntArray, 
        StructureMap.Testing</span>&quot;</p>
    <p style="margin: 0px;">
        <span style="color: blue;">&nbsp;&nbsp;&nbsp; </span><span style="color: red;">
        TPluggedType</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">StructureMap.Testing.Configuration.ClassWithStringAndIntArray, 
        StructureMap.Testing</span>&quot;<span style="color: blue;">&gt;</span></p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
        <span style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
            style="color: #a31515;">numbers</span><span style="color: blue;"> </span>
        <span style="color: red;">Values</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">1;2;3</span>&quot;<span style="color: blue;"> </span>
        <span style="color: red;">Delimiter</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">;</span>&quot;<span style="color: blue;">/&gt;</span></p>
    <p style="margin: 0px;">
        <span style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
            style="color: #a31515;">strings</span><span style="color: blue;"> </span>
        <span style="color: red;">Values</span><span style="color: blue;">=</span>&quot;<span 
            style="color: blue;">1,2,3</span>&quot;<span style="color: blue;">/&gt;</span></p>
    <p style="margin: 0px;">
        <span style="color: blue;">&nbsp; &lt;/</span><span style="color: #a31515;">DefaultInstance</span><span 
            style="color: blue;">&gt;</span></p>
</div>
<!--EndFragment-->
<hr />
                    <h2 class="style1">Dictionaries and NameValueCollection</h2>
<p>Any form of IDictionary&lt;Key, Value&gt; or a NameValueCollection can be configured in 
    Xml by the following syntax.&nbsp; Say you have a class that needs a Dictionary 
    of properties:</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;\red43\green145\blue175;}??\fs20     \cf3 public\cf0  \cf3 class\cf0  \cf4 ClassWithDictionary\par ??\cf0     \{\par ??        \cf3 private\cf0  \cf3 readonly\cf0  \cf4 IDictionary\cf0 &lt;\cf3 string\cf0 , \cf3 string\cf0 &gt; _dictionary;\par ??\par ??        \cf3 public\cf0  ClassWithDictionary(\cf4 IDictionary\cf0 &lt;\cf3 string\cf0 , \cf3 string\cf0 &gt; dictionary)\par ??        \{\par ??            _dictionary = dictionary;\par ??        \}\par ??\par ??        \cf3 public\cf0  \cf4 IDictionary\cf0 &lt;\cf3 string\cf0 , \cf3 string\cf0 &gt; Dictionary\par ??        \{\par ??            \cf3 get\cf0  \{ \cf3 return\cf0  _dictionary; \}\par ??        \}\par ??    \}}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white;" 
                        class="code-sample">
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">
        class</span> <span style="color: #2b91af;">ClassWithDictionary</span></p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">private</span>
        <span style="color: blue;">readonly</span> <span style="color: #2b91af;">
        IDictionary</span>&lt;<span style="color: blue;">string</span>,
        <span style="color: blue;">string</span>&gt; _dictionary;</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> 
        ClassWithDictionary(<span style="color: #2b91af;">IDictionary</span>&lt;<span 
            style="color: blue;">string</span>, <span style="color: blue;">string</span>&gt; 
        dictionary)</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _dictionary = 
        dictionary;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span>
        <span style="color: #2b91af;">IDictionary</span>&lt;<span style="color: blue;">string</span>,
        <span style="color: blue;">string</span>&gt; Dictionary</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <span style="color: blue;">get</span> { <span style="color: blue;">return</span> 
        _dictionary; }</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp; }</p>
</div>
<!--EndFragment-->
<p>The &quot;dictionary&quot; argument to the constructor function could be defined as:</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue255;\red255\green255\blue255;\red163\green21\blue21;\red255\green0\blue0;\red0\green0\blue0;}??\fs20 \cf1   &lt;\cf3 DefaultInstance\par ??\cf1     \cf4 PluginType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithDictionary, StructureMap.Testing\cf0 "\par ??\cf1     \cf4 TPluggedType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithDictionary, StructureMap.Testing\cf0 "\cf1 &gt;\par ??    &lt;\cf3 Property\cf1  \cf4 Name\cf1 =\cf0 '\cf1 dictionary\cf0 '\cf1 &gt;\par ??      &lt;\cf3 Pair\cf1  \cf4 Key\cf1 =\cf0 '\cf1 color\cf0 '\cf1  \cf4 Value\cf1 =\cf0 '\cf1 red\cf0 '\cf1 /&gt;\par ??      &lt;\cf3 Pair\cf1  \cf4 Key\cf1 =\cf0 '\cf1 state\cf0 '\cf1  \cf4 Value\cf1 =\cf0 '\cf1 texas\cf0 '\cf1 /&gt;\par ??      &lt;\cf3 Pair\cf1  \cf4 Key\cf1 =\cf0 '\cf1 direction\cf0 '\cf1  \cf4 Value\cf1 =\cf0 '\cf1 north\cf0 '\cf1 /&gt;\par ??    &lt;/\cf3 Property\cf1 &gt;\par ??  &lt;/\cf3 DefaultInstance\cf1 &gt;}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white;">
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof65001\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue255;\red255\green255\blue255;\red163\green21\blue21;\red255\green0\blue0;\red0\green0\blue0;}??\fs20 \cf1   &lt;\cf3 DefaultInstance\par ??\cf1     \cf4 PluginType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithDictionary, StructureMap.Testing\cf0 "\par ??\cf1     \cf4 TPluggedType\cf1 =\cf0 "\cf1 StructureMap.Testing.Configuration.ClassWithDictionary, StructureMap.Testing\cf0 "\cf1 &gt;\par ??    &lt;\cf3 dictionary\cf1 &gt;\par ??      &lt;\cf3 Pair\cf1  \cf4 Key\cf1 =\cf0 '\cf1 color\cf0 '\cf1  \cf4 Value\cf1 =\cf0 '\cf1 red\cf0 '\cf1 /&gt;\par ??      &lt;\cf3 Pair\cf1  \cf4 Key\cf1 =\cf0 '\cf1 state\cf0 '\cf1  \cf4 Value\cf1 =\cf0 '\cf1 texas\cf0 '\cf1 /&gt;\par ??      &lt;\cf3 Pair\cf1  \cf4 Key\cf1 =\cf0 '\cf1 direction\cf0 '\cf1  \cf4 Value\cf1 =\cf0 '\cf1 north\cf0 '\cf1 /&gt;\par ??    &lt;/\cf3 dictionary\cf1 &gt;\par ??  &lt;/\cf3 DefaultInstance\cf1 &gt;}
-->
    <div style="font-family: Courier New; font-size: 10pt; color: black; background: white;" 
        class="code-sample">
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp; &lt;</span><span style="color: #a31515;">DefaultInstance</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp; </span><span style="color: red;">
            PluginType</span><span style="color: blue;">=</span>&quot;<span style="color: blue;">StructureMap.Testing.Configuration.ClassWithDictionary, 
            StructureMap.Testing</span>&quot;</p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp; </span><span style="color: red;">
            TPluggedType</span><span style="color: blue;">=</span>&quot;<span 
                style="color: blue;">StructureMap.Testing.Configuration.ClassWithDictionary, 
            StructureMap.Testing</span>&quot;<span style="color: blue;">&gt;</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;</span><span 
                style="color: #a31515;">dictionary</span><span style="color: blue;">&gt;</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span 
                style="color: #a31515;">Pair</span><span style="color: blue;"> </span>
            <span style="color: red;">Key</span><span style="color: blue;">=&quot;color&quot; </span>
            <span style="color: red;">Value</span><span style="color: blue;">=&quot;red&quot;/&gt;</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span 
                style="color: #a31515;">Pair</span><span style="color: blue;"> </span>
            <span style="color: red;">Key</span><span style="color: blue;">=&quot;state&quot; </span>
            <span style="color: red;">Value</span><span style="color: blue;">=&quot;texas&quot;/&gt;</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span 
                style="color: #a31515;">Pair</span><span style="color: blue;"> </span>
            <span style="color: red;">Key</span><span style="color: blue;">=&quot;direction&quot; </span>
            <span style="color: red;">Value</span><span style="color: blue;">=&quot;north&quot;/&gt;</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp;&nbsp;&nbsp; &lt;/</span><span 
                style="color: #a31515;">dictionary</span><span style="color: blue;">&gt;</span></p>
        <p style="margin: 0px;">
            <span style="color: blue;">&nbsp; &lt;/</span><span style="color: #a31515;">DefaultInstance</span><span 
                style="color: blue;">&gt;</span></p>
    </div>
<!--EndFragment-->
<p style="margin: 0px;">
    &nbsp;</p>
        
    </div>
<!--EndFragment-->
<p>Just create a new node for the IDictionary property called &lt;[propertyName]&gt; under 
    the main instance node.&nbsp; Then add a &lt;Pair Key=&quot;key&quot; Value=&quot;value&quot;/&gt; node 
    for each name/value pair in the IDictionary. </p>
                    <hr />

	</body>
</html>
