<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="100" xml:space="preserve">
    <value>Expected file "StructureMap.config" cannot be opened at {0}</value>
  </data>
  <data name="101" xml:space="preserve">
    <value>Assembly {0} referenced by an &lt;Assembly&gt; node in StructureMap.config cannot be loaded into the current AppDomain</value>
  </data>
  <data name="102" xml:space="preserve">
    <value>Assembly {0} referenced in a &lt;PluginFamily&gt; node for PluginType "{1}" in StructureMap.config cannot be loaded into the current AppDomain</value>
    <comment>delete?</comment>
  </data>
  <data name="110" xml:space="preserve">
    <value>Assembly referenced by a &lt;Plugin&gt; for Type "{0}", concrete key "{1}" node in StructureMap.config cannot be loaded into the current AppDomain.</value>
    <comment>delete?</comment>
  </data>
  <data name="112" xml:space="preserve">
    <value>Missing a mandatory "ConcreteKey" attribute in a &lt;Plugin&gt; node for Type "{0}"</value>
    <comment>change wording</comment>
  </data>
  <data name="200" xml:space="preserve">
    <value>Could not find an Instance named "{0}" for PluginType {1}</value>
  </data>
  <data name="201" xml:space="preserve">
    <value>Unrecognized ConcreteKey "{0}" configured for InstanceKey "{1}" of PluginFamily {2}</value>
    <comment>Change wording</comment>
  </data>
  <data name="202" xml:space="preserve">
    <value>No Default Instance defined for PluginFamily {0}</value>
  </data>
  <data name="203" xml:space="preserve">
    <value>Internal exception in MementoSource creating an InstanceMemento for InstanceKey "{0}"</value>
  </data>
  <data name="205" xml:space="preserve">
    <value>Missing requested Instance property "{0}" for InstanceKey "{1}"</value>
  </data>
  <data name="204" xml:space="preserve">
    <value>Internal exception in InstanceMemento "{0}"</value>
  </data>
  <data name="206" xml:space="preserve">
    <value>Invalid property value(s), InstanceKey "{0}"</value>
  </data>
  <data name="207" xml:space="preserve">
    <value>Internal exception while creating Instance '{0}' of PluginType {1}.  Check the inner exception for more details.</value>
  </data>
  <data name="104" xml:space="preserve">
    <value>Type {0} cannot be plugged into type {1}</value>
  </data>
  <data name="220" xml:space="preserve">
    <value>Cannot "Stub" type {0} with an object of type {1}</value>
  </data>
  <data name="230" xml:space="preserve">
    <value>Cannot call "FillDependencies" on type {0}.  Check that the type is concrete and has no primitive arguments</value>
  </data>
  <data name="240" xml:space="preserve">
    <value>Property {0} does not exist on the PluggedType {1} or does not have a public setter</value>
  </data>
  <data name="150" xml:space="preserve">
    <value>The file {0} referenced in an &lt;Include&gt; node cannot be opened</value>
  </data>
  <data name="250" xml:space="preserve">
    <value>The named Template {0} cannot be found</value>
  </data>
  <data name="170" xml:space="preserve">
    <value>Unable to find the exported Type's in assembly {0}.  One or more of the assembly's dependencies may be missing.</value>
  </data>
  <data name="122" xml:space="preserve">
    <value>Could not create the type {0} specified in the [PluginFamily] attribute on PluginFamily {1}</value>
  </data>
  <data name="180" xml:space="preserve">
    <value>StructureMap cannot construct objects of Class {0} because there is no public constructor found.</value>
  </data>
  <data name="115" xml:space="preserve">
    <value>An exception occurred while trying to create an InstanceFactory for PluginType {0}</value>
  </data>
  <data name="195" xml:space="preserve">
    <value>The Profile {0} referenced by Machine {1} does not exist</value>
  </data>
  <data name="302" xml:space="preserve">
    <value>There is no argument of type {0} for concrete type {1}</value>
  </data>
  <data name="303" xml:space="preserve">
    <value>Type {0} is either abstract or cannot be plugged into Type {1}</value>
  </data>
  <data name="304" xml:space="preserve">
    <value>Profile or Machine default for {0} not completely specified</value>
  </data>
  <data name="305" xml:space="preserve">
    <value>There is no constructor property found of type {0}</value>
  </data>
  <data name="105" xml:space="preserve">
    <value>The &lt;{0}&gt; section could not be loaded from the application configuration file.</value>
  </data>
  <data name="306" xml:space="preserve">
    <value>The configured BuilderDelegate of type {0} does not match the PluginFamily type {1}</value>
  </data>
  <data name="307" xml:space="preserve">
    <value>In the call to ChildArray&lt;T&gt;(), the type T must be an array</value>
  </data>
  <data name="308" xml:space="preserve">
    <value>A configured instance interceptor has failed for Instance '{0}' and concrete type '{1}'</value>
  </data>
  <data name="260" xml:space="preserve">
    <value>Malformed InstanceMemento {0} of PluginType {1}</value>
  </data>
  <data name="107" xml:space="preserve">
    <value>Type named {0} cannot be resolved.  Make sure the type is defined in Assembly Qualified Name form</value>
  </data>
  <data name="130" xml:space="preserve">
    <value>System object for {0} could not be created</value>
  </data>
  <data name="131" xml:space="preserve">
    <value>Requested type {0} could not be found while {1}</value>
  </data>
  <data name="155" xml:space="preserve">
    <value>Cannot find required &lt;StructureMap&gt; node in file {0}</value>
  </data>
  <data name="156" xml:space="preserve">
    <value>Missing @File attribute on &lt;Include&gt; node on file {0}</value>
  </data>
  <data name="160" xml:space="preserve">
    <value>Cannot open Xml configuration from file {0}</value>
  </data>
  <data name="103" xml:space="preserve">
    <value>Requested PluginType {0} configured in Xml cannot be found</value>
  </data>
  <data name="400" xml:space="preserve">
    <value>Unknown error</value>
  </data>
  <data name="196" xml:space="preserve">
    <value>Could not find referenced instance named {0} of PluginType {1} for Profile {2}</value>
  </data>
  <data name="270" xml:space="preserve">
    <value>Instance specific interception failed for {0} of PluginType {1}</value>
  </data>
  <data name="210" xml:space="preserve">
    <value>The designated default instance '{0}' for PluginType {1} cannot be found</value>
  </data>
  <data name="280" xml:space="preserve">
    <value>Requested Profile {0} cannot be found</value>
  </data>
  <data name="50" xml:space="preserve">
    <value>StructureMapConfiguration cannot be used after ObjectFactory is initialized</value>
  </data>
  <data name="125" xml:space="preserve">
    <value>Cannot plug an abstract class or an interface</value>
  </data>
  <data name="231" xml:space="preserve">
    <value>Cannot use the "TheDefaultIsConcreteType" method with an object that has primitive constructor arguments.  Use the "Use&lt;T&gt;()" method instead and specify the primitive constructor arguments</value>
  </data>
  <data name="285" xml:space="preserve">
    <value>Only open generic types can be used in the call to Container.ForGenericType(type)</value>
  </data>
  <data name="290" xml:space="preserve">
    <value>Could not load the designated Registry class '{0}'</value>
  </data>
  <data name="295" xml:space="preserve">
    <value>Bidirectional Dependency Problem detected with {0}.  The BuildStack is: {1}</value>
  </data>
  <data name="245" xml:space="preserve">
    <value>Error while trying to create an InstanceBuilder for {0}</value>
  </data>
  <data name="25" xml:space="preserve">
    <value>Only a concrete type may be used here</value>
  </data>
  <data name="309" xml:space="preserve">
    <value>You cannot use the HttpContextLifecycle outside of a web request. Try the HybridLifecycle instead.</value>
  </data>
</root>